@use "foundation/text";

.animationContainer {
  width: 100%;
  height: calc(20vh * 2 + 1vw);
  position: relative;
  overflow-x: clip;
  overflow-y: visible;
  margin-bottom: 2rem;

  .ghostContainer {
    display: grid;
    grid-template-columns: 15vw 15vw 15vw 15vw 15vw;
    grid-template-rows: 20vh 20vh;
    column-gap: 1vw;
    row-gap: 1vw;

    position: absolute;}

  .left {
    margin-left: -20vw;
    :nth-child(1) {
      grid-column: 1 / span 2;
      grid-row: 1 / span 2;
    }

    :nth-child(2) {
      grid-column: 3 / span 2;
      grid-row: 2 / span 1;
    }

    :nth-child(3) {
      grid-column: 3 / span 1;
      grid-row: 1 / span 1;
    }

    :nth-child(4) {
      grid-column: 4 / span 2;
      grid-row: 1 / span 1;
    }
  }

  .right {
    margin-left: 45vw;
    :nth-child(1) {
      grid-column: 4 / span 2;
      grid-row: 1 / span 2;
    }

    :nth-child(2) {
      grid-column: 1 / span 2;
      grid-row: 2 / span 1;
    }

    :nth-child(3) {
      grid-column: 3 / span 1;
      grid-row: 2 / span 1;
    }

    :nth-child(4) {
      grid-column: 2 / span 2;
      grid-row: 1 / span 1;
    }
  }
}

.headerContainer {
  // center
  position: absolute;
  transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-bottom: 2rem;

  h1 {
    position: relative;
  }
}

.container {
  background: var(--dark-background);
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-top: 5rem;

  p {
    text-align: center;
    width: 75rem;
    max-width: 80vw;
  }
}

.out {
  display: none;
}